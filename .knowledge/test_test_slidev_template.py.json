{"is_source_file": true, "format": "Python", "description": "This source file contains unit tests for the 'SlidevTemplate' class and related project initialization logic within a project scaffolding tool. It uses pytest fixtures and test cases to verify project setup, template variable replacement, and script execution functionality.", "external_files": ["pytest", "pathlib.Path", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig.ProjectConfig", "universalinit.templateconfig.ProjectType", "universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.TemplateProvider", "universalinit.universalinit.SlidevTemplate"], "external_methods": ["pytest.fixture", "pytest.get", "shutil.rmtree", "shutil.copy", "Path.mkdir", "Path.write_text", "Path.read_text", "yaml.dump", "yaml.safe_load", "json.dump", "json.load"], "published": [], "classes": [], "methods": [{"name": "temp_dir()", "description": "Fixture that creates and cleans up a temporary directory for tests.", "scope": "", "scopeKind": ""}, {"name": "template_dir(temp_dir)", "description": "Fixture that sets up a mock template directory with configuration and template files for testing.", "scope": "", "scopeKind": ""}, {"name": "project_config(temp_dir)", "description": "Fixture that returns a sample ProjectConfig instance used in tests.", "scope": "", "scopeKind": ""}, {"name": "test_slidev_init_info(template_dir, project_config)", "description": "Tests retrieval of template initialization information for the Slidev template.", "scope": "", "scopeKind": ""}, {"name": "test_project_initialization(template_dir, project_config)", "description": "Tests the end-to-end project creation process and verifies output files and content.", "scope": "", "scopeKind": ""}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "description": "Verifies that the post-processing script runs successfully during project initialization.", "scope": "", "scopeKind": ""}, {"name": "test_config_file_loading(temp_dir)", "description": "Checks that configuration data can be correctly loaded from a JSON file.", "scope": "", "scopeKind": ""}, {"name": "test_template_variable_replacement(template_dir, project_config)", "description": "Validates that template variables in files are replaced correctly with project parameters.", "scope": "", "scopeKind": ""}, {"name": "test_slidev_registration()", "description": "Ensures the SlidevTemplate class is registered properly within the factory.", "scope": "", "scopeKind": ""}, {"name": "test_slidev_validation()", "description": "Tests that the parameter validation method in SlidevTemplate works correctly.", "scope": "", "scopeKind": ""}], "calls": ["shutil.rmtree", "Path.mkdir", "yaml.dump", "yaml.safe_load", "json.dump"], "search-terms": ["SlidevTemplate", "test_slidev_deck", "project_initializer", "template_factory", "slidev", "config.yml", "template_variable", "post_processing", "project_config"], "state": 2, "file_id": 361, "knowledge_revision": 1048, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_slidev_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_slidev_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_slidev_registration", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_slidev_registration():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_slidev_validation", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_slidev_validation():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_slidev_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "3497a3326fe73935574acedbe5df832c", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_slidev_template.py", "revision_history": [{"1048": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}