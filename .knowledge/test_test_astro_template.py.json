{"is_source_file": true, "format": "Python", "description": "Source code for unit tests related to the Astro template in the universalinit project. It contains mock fixture setups, tests for template initialization, project creation, parameter validation, post-processing execution, configuration loading, and variable replacement.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path.mkdtemp", "shutil.rmtree", "yaml.dump", "yaml.safe_load", "json.dump"], "published": [], "classes": [{"name": "ProjectConfig", "description": "Configuration class for project settings."}, {"name": "ProjectType", "description": "Enum representing different project types, such as ASTRO."}, {"name": "TemplateInitInfo", "description": "Class holding initialization information for templates."}, {"name": "ProjectInitializer", "description": "Class responsible for initializing and setting up projects based on templates."}, {"name": "TemplateProvider", "description": "Class providing templates from a specified source."}, {"name": "AstroTemplate", "description": "Template class for Astro projects."}], "methods": [{"name": "test_astro_init_info(template_dir, project_config)", "description": "Tests retrieval of initialization info from the Astro template.", "scope": "", "scopeKind": ""}, {"name": "test_project_initialization(template_dir, project_config)", "description": "Verifies project files are correctly generated and content replaced.", "scope": "", "scopeKind": ""}, {"name": "test_parameter_validation(template_dir, temp_dir)", "description": "Checks validation of parameters passed to the Astro template.", "scope": "", "scopeKind": ""}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "description": "Ensures post-processing scripts run and complete successfully.", "scope": "", "scopeKind": ""}, {"name": "test_config_file_loading(temp_dir)", "description": "Tests loading project configuration from a JSON file.", "scope": "", "scopeKind": ""}, {"name": "test_template_variable_replacement(template_dir, project_config)", "description": "Verifies placeholders in templates are replaced with project parameters.", "scope": "", "scopeKind": ""}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "yaml.safe_load", "json.dump", "shutil.rmtree", "Path.write_text", "Path.read_text", "Path.exists", "shutil.rmtree"], "search-terms": ["Pytest fixture setup", "Astro template tests", "ProjectInitializer", "TemplateProvider", "AstroTemplate", "project configuration", "template variable replacement", "post processing script", "config.yml loading", "unit tests"], "state": 2, "file_id": 350, "knowledge_revision": 1032, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_astro_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_astro_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_parameter_validation", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_parameter_validation(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "91d2988614e759c352d7f5f4f3f331d6", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_astro_template.py", "revision_history": [{"1032": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}