{"is_source_file": true, "format": "Python", "description": "This is a test script using pytest for testing the AstroTemplate class and project initialization functionalities in the universalinit project. It includes fixtures for creating temporary directories and mock templates, as well as multiple test functions to verify correct project setup, configuration loading, parameter validation, post-processing execution, and template variable replacement.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path.mkdtemp", "shutil.rmtree", "shutil.rmtree", "Path.exists", "yaml.dump", "yaml.safe_load", "Path.write_text", "Path.read_text", "json.dump", "json.load", "ProjectInitializer.load_config", "ProjectInitializer.initialize_project", "ProjectInitializer.wait_for_post_process_completed"], "published": ["test_astro_template"], "classes": [{"name": "ProjectConfig", "description": "Data class representing the project configuration, including name, version, description, author, type, output path, and parameters."}, {"name": "ProjectType", "description": "Enum class defining supported project types, e.g., ASTRO."}, {"name": "TemplateInitInfo", "description": "Class containing initialization commands and environment info for project templates."}, {"name": "ProjectInitializer", "description": "Main class responsible for project setup, including loading configurations, creating templates, and executing post-processing scripts."}, {"name": "TemplateProvider", "description": "Provides template data such as configuration and template files."}, {"name": "AstroTemplate", "description": "Template class specific to Astro projects, providing initialization info, project setup logic, and variable substitution."}], "methods": [{"name": "test_astro_init_info(template_dir, project_config)", "description": "Verifies that the template correctly provides initialization information.", "scope": "", "scopeKind": ""}, {"name": "test_project_initialization(template_dir, project_config)", "description": "Tests the complete process of initializing a project and verifying generated files and content.", "scope": "", "scopeKind": ""}, {"name": "test_parameter_validation(template_dir, temp_dir)", "description": "Checks parameter validation logic during project setup against valid and invalid parameter sets.", "scope": "", "scopeKind": ""}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "description": "Ensures the post-processing script executes and performs expected actions.", "scope": "", "scopeKind": ""}, {"name": "test_config_file_loading(temp_dir)", "description": "Validates loading project configuration from a JSON file.", "scope": "", "scopeKind": ""}, {"name": "test_template_variable_replacement(template_dir, project_config)", "description": "Tests correct replacement of template variables within files during project setup.", "scope": "", "scopeKind": ""}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "yaml.safe_load", "Path.write_text", "Path.read_text", "json.dump", "ProjectInitializer.load_config", "ProjectInitializer.initialize_project", "ProjectInitializer.wait_for_post_process_completed"], "search-terms": ["AstroTemplate", "project initialization", "template variable substitution", "post-processing script", "config.yml", "pytest fixtures", "project configuration", "test_astro_template"], "state": 2, "file_id": 647, "knowledge_revision": 1331, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_astro_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_astro_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_parameter_validation", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_parameter_validation(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_astro_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "91d2988614e759c352d7f5f4f3f331d6", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_astro_template.py", "revision_history": [{"1331": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}