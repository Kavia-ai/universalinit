{"is_source_file": true, "format": "Python", "description": "This file contains utility functions for managing environment variable mappings across different frameworks using YAML templates. It includes functions to parse templates, apply prefixes, and map environment variables between common and framework-specific formats.", "external_files": ["yaml", "pathlib.Path"], "external_methods": ["yaml.safe_load", "Path.parent", "Path.exists", "Path.iterdir"], "published": ["get_template_path", "parse_template_file", "apply_prefix_mapping", "map_common_to_framework", "map_framework_to_common", "get_supported_frameworks"], "classes": [], "methods": [{"name": "get_template_path", "description": "Returns the Path object to the environment template file for a specified framework."}, {"name": "parse_template_file", "description": "Parses a YAML template file to extract an optional prefix and a mapping dictionary."}, {"name": "apply_prefix_mapping", "description": "Applies a prefix to all environment variables in a given dictionary."}, {"name": "map_common_to_framework", "description": "Maps a set of common environment variables to framework-specific variables based on a template."}, {"name": "map_framework_to_common", "description": "Converts framework-specific environment variables back to a common format."}, {"name": "get_supported_frameworks", "description": "Returns a list of frameworks supported based on existing template directories."}], "calls": ["Path.parent", "Path.exists", "yaml.safe_load"], "search-terms": ["environment variable mapping", "yaml template parsing", "framework env vars", "prefix application", "template file handling"], "state": 2, "file_id": 332, "knowledge_revision": 669, "git_revision": "50d7ef0c9ced2660ff15096e3e76f418c9a94782", "ctags": [], "filename": "universalinit-env/src/universalinit_env/envmapper.py", "hash": "87751ba2390042a876683cb964b03d98", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"669": "50d7ef0c9ced2660ff15096e3e76f418c9a94782"}]}