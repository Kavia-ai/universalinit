{"is_source_file": true, "format": "Python", "description": "This is a test suite for the Remix project template, including fixtures, mock file creation, and various unit tests for project initialization, configuration loading, template variable replacement, and post-processing execution.", "external_files": ["pytest", "pathlib.Path", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig.ProjectConfig", "universalinit.templateconfig.ProjectType", "universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.TemplateProvider", "universalinit.universalinit.RemixTemplate"], "external_methods": ["pytest.fixture", "Path.mkdir", "Path.write_text", "Path.read_text", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "yaml.safe_load", "json.dump", "json.load", "ProjectInitializer.load_config", "ProjectInitializer.initialize_project", "ProjectInitializer.wait_for_post_process_completed"], "published": [], "classes": [], "methods": [{"name": "temp_dir", "description": "Fixture that creates and cleans up a temporary directory for test outputs."}, {"name": "template_dir", "description": "Fixture that creates a mock template directory with configuration and template files."}, {"name": "project_config", "description": "Fixture that creates a sample ProjectConfig object for testing."}, {"name": "test_remix_init_info", "description": "Tests retrieval of initial template information, verifying command correctness."}, {"name": "test_project_initialization", "description": "Tests the full project initialization process, including directory structure and content replacement."}, {"name": "test_post_processing_execution", "description": "Tests execution of post-processing scripts and their effects."}, {"name": "test_config_file_loading", "description": "Tests loading project configuration from a JSON file."}, {"name": "test_template_variable_replacement", "description": "Verifies that template variables are correctly replaced in output files."}, {"name": "test_styling_solution_parameter", "description": "Checks validation of the styling_solution parameter during project setup."}], "calls": ["Path.mkdir", "Path.write_text", "Path.read_text", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "yaml.safe_load", "json.dump", "json.load", "ProjectInitializer.load_config", "ProjectInitializer.initialize_project", "ProjectInitializer.wait_for_post_process_completed"], "search-terms": ["test_remix_template", "pytest fixtures", "mock template files", "config.yml", "project initialization", "post-processing script", "template variable replacement", "styling_solution validation", "Remix project template", "unit tests"], "state": 2, "file_id": 13, "knowledge_revision": 345, "git_revision": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78", "ctags": [], "filename": "test/test_remix_template.py", "hash": "abc168bd500438845b64c25f472e7d98", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"345": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78"}]}