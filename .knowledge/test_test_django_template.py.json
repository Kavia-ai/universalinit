{"is_source_file": true, "format": "Python", "description": "This source file contains test cases for a Python project, specifically testing the initialization and configuration of Django templates and project setup. It uses fixtures, mock template files, and asserts behaviors related to project structure, variable replacement, and script execution.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path.mkdtemp", "Path.rmdir", "Path.mkdir", "Path.write_text", "yaml.dump", "json.dump"], "published": ["ProjectInitializer", "ProjectConfig", "TemplateProvider", "DjangoTemplate", "TemplateInitInfo"], "classes": [{"name": "ProjectConfig", "description": "Configuration class for project parameters, including name, version, description, author, project type, output path, and additional parameters."}, {"name": "ProjectType", "description": "Enumeration of project types, notably including DJANGO."}, {"name": "TemplateInitInfo", "description": "Data class encapsulating initial template information, such as commands for environment configuration, building, running, and generating OpenAPI specs."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects, loading configurations, and executing post-processing scripts."}, {"name": "TemplateProvider", "description": "Provides template data and resources based on specified project type."}, {"name": "DjangoTemplate", "description": "Implements Django project templating, including gathering initialization info and performing replacements."}], "methods": [{"name": "load_config", "description": "Static method to load project configuration from a JSON or YAML file."}, {"name": "initialize_project", "description": "Method to initialize and generate the project structure based on configuration."}, {"name": "get_init_info", "description": "Method in DjangoTemplate that retrieves initial setup commands from configuration."}, {"name": "wait_for_post_process_completed", "description": "Method that waits for the post-processing script to complete execution."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_django_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "json.dump", "Path.exists", "Path.read_text", "Path.write_text", "shutil.rmtree", "pytest.fixture", "Path.mkdir"], "search-terms": ["test_django_template", "ProjectInitializer", "DjangoTemplate", "TemplateInitInfo", "project_config", "initialize_project", "get_init_info", "post_processing", "config.yml", "template variable replacement"], "state": 2, "file_id": 663, "knowledge_revision": 1346, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_django_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def test_django_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_django_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "cf1bf2b63d56ec5f3e0140f38a85abc5", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_django_template.py", "revision_history": [{"1346": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}