{"is_source_file": true, "format": "JavaScript", "description": "This file implements a server-side application using Express.js that provides a web interface and API endpoints for visualizing and interacting with multiple types of databases (PostgreSQL, MySQL, SQLite, MongoDB). It includes logic for loading environment variables, configuring database clients, testing connections, and exposing data retrieval APIs.", "external_files": ["path", "fs", "pg", "mysql2/promise", "sqlite3", "mongodb"], "external_methods": ["require", "path.join", "fs.existsSync", "fs.readFileSync", "console.log", "Pool.query", "mysql.createConnection", "sqlite3.Database", "MongoClient.connect", "MongoClient.close"], "published": ["app", "loadEnvFiles", "testConnections", "handleApiRequest"], "classes": [{"name": "DatabaseAdapter", "description": "Abstract base class for database adapters, defining common interface methods for testing connection, retrieving tables, and fetching data."}, {"name": "SQLAdapter", "description": "Abstract class extending DatabaseAdapter, providing common SQL execution and query methods for specific SQL database implementations."}, {"name": "PostgresAdapter", "description": "Concrete implementation of SQLAdapter for PostgreSQL, executing queries via pg.Pool."}, {"name": "MySQLAdapter", "description": "Concrete implementation of SQLAdapter for MySQL, executing queries via mysql2/promise."}, {"name": "SQLiteAdapter", "description": "Concrete implementation of SQLAdapter for SQLite, executing queries via sqlite3."}, {"name": "MongoDBAdapter", "description": "Implementation of DatabaseAdapter for MongoDB, managing connections and data retrieval via mongodb.MongoClient."}], "methods": [{"name": "loadEnvFiles", "description": "Loads environment variables from specific .env files for different database types."}, {"name": "testConnections", "description": "Tests connectivity for all configured database clients and reports success or failure."}, {"name": "handleApiRequest", "description": "Generic handler for API requests that invokes database adapter methods and returns JSON responses."}], "calls": ["fs.existsSync", "fs.readFileSync", "console.log", "Pool.query", "mysql.createConnection", "sqlite3.Database", "MongoClient.connect", "MongoClient.close", "app.use", "app.get", "app.listen"], "search-terms": ["database visualization server", "multi-database API", "PostgreSQL adapter", "MongoDB collection listing", "SQLite data retrieval", "MySQL connection testing", "Express static server", "environment variable loader"], "state": 2, "file_id": 32, "knowledge_revision": 393, "git_revision": "5827f7390626b13dcaabaf72a23843a079beecb2", "ctags": [], "filename": "src/universalinit/common/db_visualizer/server.js", "hash": "d3a58b00b5e1c9d4d0c85088f37ad23d", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"393": "5827f7390626b13dcaabaf72a23843a079beecb2"}]}