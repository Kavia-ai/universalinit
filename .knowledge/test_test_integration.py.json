{"is_source_file": true, "format": "Python", "description": "Test suite for the universalinit project, including fixtures, project initialization, template rendering, and file copying tests.", "external_files": ["pytest", "pathlib.Path", "shutil", "tempfile", "yaml", "json", "time", "universalinit.templateconfig.ProjectConfig", "universalinit.templateconfig.ProjectType", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.TemplateProvider", "universalinit.universalinit.ReactTemplate", "universalinit.universalinit.FileSystemHelper"], "external_methods": ["pytest.fixture", "Path.mkdir", "Path.write_text", "Path.read_text", "Path.read_bytes", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig.get_replaceable_parameters", "FileSystemHelper.copy_template"], "published": ["test_project_initialization", "test_get_run_command", "test_get_entry_point_url", "test_missing_required_parameters", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement", "test_extra_files_single_file", "test_extra_files_directory", "test_extra_files_nonexistent_path", "test_extra_files_with_binary_content"], "classes": [], "methods": [{"name": "test_project_initialization", "description": "Tests the basic project initialization process, verifying directory structure and content replacement."}, {"name": "test_get_run_command", "description": "Verifies that the correct run command is retrieved from the template."}, {"name": "test_get_entry_point_url", "description": "Checks that the entry point URL is correctly obtained from the template."}, {"name": "test_missing_required_parameters", "description": "Tests project initialization with missing parameters to ensure proper handling."}, {"name": "test_post_processing_execution", "description": "Ensures that post-processing scripts are executed and their effects are verified."}, {"name": "test_config_file_loading", "description": "Tests loading project configuration from a JSON file."}, {"name": "test_template_variable_replacement", "description": "Verifies that template variables in files are correctly replaced with project parameters."}, {"name": "test_extra_files_single_file", "description": "Tests copying a single extra file with parameter replacements."}, {"name": "test_extra_files_directory", "description": "Tests copying an entire directory with nested files and parameter replacements."}, {"name": "test_extra_files_nonexistent_path", "description": "Ensures that nonexistent extra files are handled gracefully without errors."}, {"name": "test_extra_files_with_binary_content", "description": "Verifies copying of binary files (e.g., images) preserves content."}], "calls": ["Path.mkdir", "Path.write_text", "Path.read_text", "Path.read_bytes", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig.get_replaceable_parameters", "FileSystemHelper.copy_template"], "search-terms": ["pytest fixtures", "project initialization", "template rendering", "file copying", "extra files", "parameter replacement", "test configuration", "post-processing script", "template variables", "binary file copy"], "state": 2, "file_id": 11, "knowledge_revision": 374, "git_revision": "900a0dcdc720ec8e2eb5d4b75c036f9c2abef7a3", "ctags": [], "filename": "test/test_integration.py", "hash": "92f1d1b0b2f60e6702a8540f155642ad", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"374": "900a0dcdc720ec8e2eb5d4b75c036f9c2abef7a3"}]}