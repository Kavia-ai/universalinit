{"is_source_file": true, "format": "Python", "description": "This file contains Python test functions for a project initialization framework, employing pytest fixtures and test cases to validate project setup, template rendering, file copying, and configuration loading.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path.mkdtemp", "Path.rmdir", "yaml.dump", "Path.write_text", "Path.read_text", "Path.exists", "Path.mkdir", "Path.read_bytes", "Path.write_bytes", "shutil.rmtree"], "published": ["test_project_initialization", "test_get_run_command", "test_get_entry_point_url", "test_missing_required_parameters", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement", "test_extra_files_single_file", "test_extra_files_directory", "test_extra_files_nonexistent_path", "test_extra_files_with_binary_content"], "classes": [], "methods": [{"name": "test_project_initialization(template_dir, project_config)", "description": "Verifies project initialization, output directory structure, and content placeholders.", "scope": "", "scopeKind": ""}, {"name": "test_get_run_command(template_dir, project_config)", "description": "Checks retrieval of the project's run command.", "scope": "", "scopeKind": ""}, {"name": "test_get_entry_point_url(template_dir, project_config)", "description": "Validates retrieval of the project's entry point URL.", "scope": "", "scopeKind": ""}, {"name": "test_missing_required_parameters(template_dir)", "description": "Tests initialization behavior with missing required parameters in config.", "scope": "", "scopeKind": ""}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "description": "Ensures that post-processing scripts are executed and marked.", "scope": "", "scopeKind": ""}, {"name": "test_config_file_loading(temp_dir)", "description": "Loads configuration from JSON and verifies correct parsing.", "scope": "", "scopeKind": ""}, {"name": "test_template_variable_replacement(template_dir, project_config)", "description": "Checks that template variables are correctly replaced in files.", "scope": "", "scopeKind": ""}, {"name": "test_extra_files_single_file(template_dir, project_config, temp_dir)", "description": "Verifies copying and variable replacement in an extra individual file.", "scope": "", "scopeKind": ""}, {"name": "test_extra_files_directory(template_dir, project_config, temp_dir)", "description": "Checks copying of an extra directory with nested files and replacements.", "scope": "", "scopeKind": ""}, {"name": "test_extra_files_nonexistent_path(template_dir, project_config, temp_dir)", "description": "Ensures non-existent extra files don't raise errors, and templates are copied.", "scope": "", "scopeKind": ""}, {"name": "test_extra_files_with_binary_content(template_dir, project_config, temp_dir)", "description": "Validates copying binary files like images without corruption.", "scope": "", "scopeKind": ""}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["shutil.rmtree", "Path.mkdir", "Path.write_text", "yaml.dump", "Path.exists", "Path.read_text", "Path.read_bytes", "Path.write_bytes"], "search-terms": ["pytest fixtures", "universalinit", "project initialization", "template rendering", "file copying", "config loading", "variable replacement", "extra files handling", "binary file copying"], "state": 2, "file_id": 655, "knowledge_revision": 1338, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_extra_files_directory", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_extra_files_directory(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_extra_files_nonexistent_path", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_extra_files_nonexistent_path(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_extra_files_single_file", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_extra_files_single_file(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_extra_files_with_binary_content", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_extra_files_with_binary_content(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_get_entry_point_url", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_get_entry_point_url(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_get_run_command", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_get_run_command(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_missing_required_parameters", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_missing_required_parameters(template_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_integration.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "92f1d1b0b2f60e6702a8540f155642ad", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_integration.py", "revision_history": [{"1338": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}