{"is_source_file": true, "format": "Python", "description": "Source test file for NativeScript project templates and initialization logic, containing fixture definitions, test cases for project creation, configuration loading, and variable substitution.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "os", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "NativeScriptTemplate"], "published": ["test_nativescript_init_info", "test_project_initialization", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement"], "classes": [{"name": "ProjectConfig", "description": "Configuration object for project parameters such as name, version, type, output path, etc."}, {"name": "ProjectType", "description": "Enumeration of supported project types, including NativeScript."}, {"name": "TemplateInitInfo", "description": "Contains command details for environment configuration, build, install, run, test, and other initialization steps."}, {"name": "ProjectInitializer", "description": "Main class responsible for loading configs, initializing projects via templates, and managing post-processing."}, {"name": "TemplateProvider", "description": "Provides template instances based on the project type and template directory."}, {"name": "NativeScriptTemplate", "description": "Template class for NativeScript projects, providing init info, file creation, variable replacement, etc."}], "methods": [{"name": "load_config", "description": "Static method to load project configuration from JSON or YAML files."}, {"name": "get_init_info", "description": "Returns initialization commands needed to set up environment, build, and run NativeScript projects."}, {"name": "initialize_project", "description": "Main method to initialize a project according to configuration and template, including file creation."}, {"name": "wait_for_post_process_completed", "description": "Waits for post-processing scripts to finish execution."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_nativescript_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["pytest.fixture", "Path()", "shutil.rmtree()", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig()", "TemplateProvider()", "NativeScriptTemplate()", "ProjectInitializer.load_config()", "template.get_init_info()", "initializer.initialize_project()", "initializer.wait_for_post_process_completed()"], "search-terms": ["NativeScript", "config.yml", "template", "post_processing", "project initialization", "file structure", "variable substitution"], "state": 2, "file_id": 650, "knowledge_revision": 1330, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_nativescript_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def test_nativescript_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nativescript_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "b103d3bf79d52dabe6f3712d2f89253e", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_nativescript_template.py", "revision_history": [{"1330": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}