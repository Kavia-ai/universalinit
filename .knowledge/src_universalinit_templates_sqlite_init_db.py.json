{"is_source_file": true, "format": "Python", "description": "This script initializes and sets up an SQLite database for a project, creating tables, inserting initial data, and generating configuration files for different environments.", "external_files": ["db_connection.txt", "db_visualizer/sqlite.env"], "external_methods": ["os.path.exists", "os.getcwd", "os.path.abspath", "os.makedirs"], "published": ["DB_NAME", "DB_USER", "DB_PASSWORD", "DB_PORT"], "classes": [], "methods": [{"name": "connect", "description": "Establishes a connection to the SQLite database."}, {"name": "execute", "description": "Executes an SQL statement."}, {"name": "commit", "description": "Commits the current transaction."}, {"name": "close", "description": "Closes the database connection."}], "calls": ["os.path.exists", "os.getcwd", "sqlite3.connect", "cursor.execute", "conn.commit", "conn.close", "open", "os.path.abspath", "os.makedirs", "subprocess.run"], "search-terms": ["initialize sqlite db", "database setup script", "create tables", "initial data insert", "sqlite schema", "config file generation", "environment variables", "db visualizer"], "state": 2, "file_id": 618, "knowledge_revision": 1299, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "DB_NAME", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^DB_NAME = \"{KAVIA_DB_NAME}\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_PASSWORD", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^DB_PASSWORD = \"{KAVIA_DB_PASSWORD}\"  # Not used for SQLite, but kept for consistency$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_PORT", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^DB_PORT = \"{KAVIA_DB_PORT}\"  # Not used for SQLite, but kept for consistency$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_USER", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^DB_USER = \"{KAVIA_DB_USER}\"  # Not used for SQLite, but kept for consistency$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "conn", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^conn = sqlite3.connect(DB_NAME)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connection_string", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^connection_string = f\"sqlite:\\/\\/\\/{current_dir}\\/{DB_NAME}\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "current_dir", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^current_dir = os.getcwd()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "cursor", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^cursor = conn.cursor()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "db_exists", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^db_exists = os.path.exists(DB_NAME)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "db_path", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^db_path = os.path.abspath(DB_NAME)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "record_count", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^record_count = cursor.fetchone()[0]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^    result = subprocess.run(['which', 'sqlite3'], capture_output=True, text=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "table_count", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/sqlite/init_db.py", "pattern": "/^table_count = cursor.fetchone()[0]$/", "language": "Python", "kind": "variable"}], "hash": "26688f14f37bb6070ec025475cc2cb27", "format-version": 4, "code-base-name": "universalinit", "filename": "src/universalinit/templates/sqlite/init_db.py", "fields": [{"name": "DB_NAME = \"{KAVIA_DB_NAME}\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_PASSWORD = \"{KAVIA_DB_PASSWORD}\"  # Not used for SQLite, but kept for consistency", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_PORT = \"{KAVIA_DB_PORT}\"  # Not used for SQLite, but kept for consistency", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_USER = \"{KAVIA_DB_USER}\"  # Not used for SQLite, but kept for consistency", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "conn = sqlite3.connect(DB_NAME)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "connection_string = f\"sqlite:\\/\\/\\/{current_dir}\\/{DB_NAME}\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "current_dir = os.getcwd()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cursor = conn.cursor()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "db_exists = os.path.exists(DB_NAME)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "db_path = os.path.abspath(DB_NAME)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "record_count = cursor.fetchone()[0]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "result = subprocess.run(['which', 'sqlite3'], capture_output=True, text=True)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "table_count = cursor.fetchone()[0]", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"1299": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}