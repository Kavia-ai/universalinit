{"is_source_file": true, "format": "Python", "description": "This is a Python script for a command-line interface (CLI) tool called 'Universal Project Initializer'. It handles argument parsing, project configuration creation, and project initialization based on templates. The script includes functions for parsing parameters, converting paths, and outputting JSON results, and it orchestrates the project setup process.", "external_files": ["universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectConfig", "universalinit.universalinit.ProjectType", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.ProjectType.from_string"], "published": ["main"], "classes": [], "methods": [{"name": "parse_parameters", "description": "Parses a comma-separated string of key=value pairs into a dictionary with appropriate data types."}, {"name": "create_project_config", "description": "Creates a ProjectConfig object from CLI arguments."}, {"name": "make_path_absolute", "description": "Converts a relative path to an absolute path based on a given base path."}, {"name": "template_init_info_to_dict", "description": "Converts a TemplateInitInfo object into a dictionary with absolute paths for serialization."}, {"name": "output_json", "description": "Outputs a JSON-formatted result indicating success or failure, including optional template info."}, {"name": "main", "description": "Main function that parses CLI arguments, creates project configuration, generates templates, and initializes the project."}], "calls": ["universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectConfig", "universalinit.universalinit.ProjectType.from_string", "initializer.template_factory.create_template", "template.get_init_info", "initializer.initialize_project", "output_json"], "search-terms": ["universalinit", "cli.py", "project initializer", "template configuration", "argument parsing", "project setup"], "state": 2, "file_id": 35, "knowledge_revision": 391, "git_revision": "a59bcc7759ef3bf38bff29ce77c2dc64f3668a7f", "ctags": [], "filename": "src/universalinit/cli.py", "hash": "757b2e18b385e1a9f5ec0b4e7fc257e0", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"391": "a59bcc7759ef3bf38bff29ce77c2dc64f3668a7f"}]}