{"is_source_file": true, "format": "TypeScript", "description": "This file defines a single exported function setupCounter which initializes a counter on an HTML button element. It sets up an event listener to increment the counter each time the button is clicked and updates the button text accordingly.", "external_files": [], "external_methods": [], "published": ["setupCounter"], "classes": [], "methods": [{"name": "export function setupCounter(element: HTMLButtonElement) { setupCounter", "description": "Initializes a counter on a given HTMLButtonElement, setting up an event listener to increment and display the count on click.", "scope": "", "scopeKind": ""}], "calls": ["element.addEventListener", "setCounter"], "search-terms": ["counter", "setupCounter", "HTMLButtonElement", "click event", "counter state"], "state": 2, "file_id": 493, "knowledge_revision": 1179, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "setCounter", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/typescript/src/counter.ts", "pattern": "/^  const setCounter = (count: number) => {$/", "language": "TypeScript", "kind": "constant", "scope": "setupCounter", "scopeKind": "function"}, {"_type": "tag", "name": "setupCounter", "path": "/home/kavia/workspace/code-generation/universalinit/src/universalinit/templates/typescript/src/counter.ts", "pattern": "/^export function setupCounter(element: HTMLButtonElement) {$/", "language": "TypeScript", "kind": "function"}], "hash": "3de3bb5fb4e9f21d2dd136b8fb2fc629", "format-version": 4, "code-base-name": "universalinit", "filename": "src/universalinit/templates/typescript/src/counter.ts", "revision_history": [{"1179": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}