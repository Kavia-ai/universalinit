{"is_source_file": true, "format": "Python", "description": "This source file contains pytest unit tests for a Vite template initialization system within a larger project. It includes fixture setups for mock template directories and configuration files, and tests for template info retrieval, project initialization, post-processing execution, configuration loading, and template variable replacement.", "external_files": ["pytest", "pathlib.Path", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig.ProjectConfig", "universalinit.templateconfig.ProjectType", "universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.TemplateProvider", "universalinit.universalinit.ViteTemplate"], "external_methods": ["pytest.fixture", "yaml.dump", "yaml.safe_load", "Path.mkdir", "Path.write_text", "Path.read_text", "shutil.rmtree", "tempfile.mkdtemp", "Path.exists", "json.dump", "json.load"], "published": ["test_vite_init_info", "test_project_initialization", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement"], "classes": [{"name": "ProjectConfig", "description": "Represents project configuration including name, version, description, author, type, output path, and parameters."}, {"name": "ProjectType", "description": "Enumeration of project types, with at least 'VITE' as one type."}, {"name": "TemplateInitInfo", "description": "Contains information about template initialization commands and scripts."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates."}, {"name": "TemplateProvider", "description": "Provides template data, including loading templates from directories."}, {"name": "ViteTemplate", "description": "Template class specific for Vite projects, with methods for retrieving init info and applying templates."}], "methods": [{"name": "get_init_info", "description": "Returns initialization info such as commands and environment setup for the template."}, {"name": "initialize_project", "description": "Creates a project directory structure based on the template and project configuration."}, {"name": "wait_for_post_process_completed", "description": "Blocks until post-processing scripts have finished executing."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_vite_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "yaml.safe_load", "Path.mkdir", "Path.write_text", "Path.read_text", "shutil.rmtree", "Path.exists", "json.dump", "json.load"], "search-terms": ["pytest", "template", "Vite", "test_vite_template", "project initialization", "post-processing", "config.yml", "universalinit", "template_factory", "initialize_project"], "state": 2, "file_id": 662, "knowledge_revision": 1342, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_vite_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_vite_template.py", "pattern": "/^def test_vite_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "a9e5c997dffa054c3a33ccd1910a7d24", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_vite_template.py", "revision_history": [{"1342": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}