{"is_source_file": true, "format": "Python", "description": "This Python source file contains pytest-based unit tests for a PostgreSQL project template in a software project. It includes fixtures to create temporary directories and mock template files, along with multiple test cases to verify project initialization, configuration loading, template variable replacements, and PostgreSQL-specific setup features. The tests validate that the generated scripts and documentation files contain the correct placeholders replaced with project-specific parameters, ensuring the template behaves correctly within the project structure.", "external_files": ["universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "pytest", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump"], "published": ["ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "PostgreSQLTemplate"], "classes": [{"name": "ProjectConfig", "description": "Represents the configuration for a project, including name, version, description, author, project type, output path, and parameters."}, {"name": "ProjectType", "description": "Enumeration of supported project types, including PostgreSQL."}, {"name": "TemplateInitInfo", "description": "Encapsulates initial template information such as commands, URLs, and configuration details needed to set up the project."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates and configurations."}, {"name": "TemplateProvider", "description": "Provides access to template files and associated data."}, {"name": "PostgreSQLTemplate", "description": "Template class for PostgreSQL project setup, providing initialization info and file templates."}], "methods": [{"name": "load_config", "description": "Static method to load project configuration from a JSON file."}, {"name": "get_init_info", "description": "Method to retrieve initial setup information for the template."}, {"name": "initialize_project", "description": "Method to create project files and setup environment based on the template."}, {"name": "get_replaceable_parameters", "description": "Returns parameters eligible for template variable replacement."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_default_parameters(template_dir, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_entry_point_url(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_postgresql_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_postgresql_specific_features(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_readme_content(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_startup_script_structure(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["shutil.rmtree", "yaml.dump", "json.dump", "ProjectInitializer.load_config", "template.get_init_info", "initializer.initialize_project", "Path.exists", "Path.read_text", "Path.write_text"], "search-terms": ["pytest_fixture", "PostgreSQLTemplate", "templateconfig", "universalinit", "test_postgresql_template", "config.yml", "startup.sh", "project initialization", "template variable replacement", "PostgreSQL setup", "database connection string", "Docker", "YAML config", "template files", "unit tests"], "state": 2, "file_id": 665, "knowledge_revision": 1345, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_default_parameters", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_default_parameters(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_entry_point_url", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_entry_point_url(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_postgresql_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_postgresql_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_postgresql_specific_features", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_postgresql_specific_features(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_readme_content", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_readme_content(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_startup_script_structure", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_startup_script_structure(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "ed3eb2f98c649c67bd48e8ffe2423228", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_postgresql_template.py", "revision_history": [{"1345": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}