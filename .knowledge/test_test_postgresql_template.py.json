{"is_source_file": true, "format": "Python", "description": "This source file contains pytest test cases for testing PostgreSQL template initialization, project setup, configuration loading, variable replacements, and content validation within a larger project that manages database templates.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "PostgreSQLTemplate"], "published": ["test_postgresql_init_info", "test_project_initialization", "test_default_parameters", "test_config_file_loading", "test_entry_point_url", "test_startup_script_structure", "test_template_variable_replacement", "test_postgresql_specific_features", "test_readme_content"], "classes": [{"name": "ProjectConfig", "description": "Configuration class for project settings, including name, version, description, author, project type, output path, and parameters."}, {"name": "ProjectType", "description": "Enumeration for different project types, including PostgreSQL."}, {"name": "TemplateInitInfo", "description": "Data class encapsulating initialization information for a template, such as environment commands, build commands, entry point URL, and other setup instructions."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates, loading configurations, and executing setup procedures."}, {"name": "TemplateProvider", "description": "Provides template files and structures for different project types."}, {"name": "PostgreSQLTemplate", "description": "Template class specific to PostgreSQL project setup, defines how to generate project files and parameters."}], "methods": [{"name": "load_config", "description": "Loads project configuration from a JSON or YAML file."}, {"name": "get_init_info", "description": "Retrieves initialization information for the current template."}, {"name": "initialize_project", "description": "Executes the project initialization process, including file creation and parameter replacement."}, {"name": "get_replaceable_parameters", "description": "Returns a dictionary of parameters available for template variable substitution."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_default_parameters(template_dir, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_entry_point_url(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_postgresql_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_postgresql_specific_features(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_readme_content(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_startup_script_structure(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "json.dump", "Path().exists", "Path().read_text", "Path().write_text", "shutil.rmtree", "tempfile.mkdtemp", "ProjectInitializer.load_config", "ProjectInitializer.get_init_info", "ProjectInitializer.initialize_project", "PostgreSQLTemplate.get_init_info", "PostgreSQLTemplate.get_replaceable_parameters"], "search-terms": ["PostgreSQL", "startup.sh", "config.yml", "TemplateInitInfo", "ProjectInitializer", "universalinit", "Database setup", "pg_isready", "psql", "PostgreSQLTemplate"], "state": 2, "file_id": 352, "knowledge_revision": 1031, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_default_parameters", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_default_parameters(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_entry_point_url", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_entry_point_url(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_postgresql_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_postgresql_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_postgresql_specific_features", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_postgresql_specific_features(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_readme_content", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_readme_content(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_startup_script_structure", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_startup_script_structure(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_postgresql_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "ed3eb2f98c649c67bd48e8ffe2423228", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_postgresql_template.py", "revision_history": [{"1031": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}