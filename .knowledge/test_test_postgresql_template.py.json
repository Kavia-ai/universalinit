{"is_source_file": true, "format": "Python", "description": "This is a test source file containing unit tests for the PostgreSQL template in the universalinit project. It uses pytest to verify project initialization, configuration loading, template variable replacement, and script content correctness.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "PostgreSQLTemplate"], "published": ["test_postgresql_init_info", "test_project_initialization", "test_default_parameters", "test_config_file_loading", "test_entry_point_url", "test_startup_script_structure", "test_template_variable_replacement", "test_postgresql_specific_features", "test_readme_content"], "classes": [], "methods": [{"name": "test_postgresql_init_info", "description": "Verifies that the template's initial configuration info contains the correct command."}, {"name": "test_project_initialization", "description": "Checks that project files are created with correct content and structure after initialization."}, {"name": "test_default_parameters", "description": "Ensures default parameters are applied when none are provided."}, {"name": "test_config_file_loading", "description": "Tests loading project configuration from a JSON file."}, {"name": "test_entry_point_url", "description": "Verifies the generated entry point URL contains correct parameters."}, {"name": "test_startup_script_structure", "description": "Checks that the startup.sh script contains necessary PostgreSQL setup commands."}, {"name": "test_template_variable_replacement", "description": "Ensures template variables in files are correctly replaced with project parameters."}, {"name": "test_postgresql_specific_features", "description": "Verifies PostgreSQL-specific parameters and features are correctly handled."}, {"name": "test_readme_content", "description": "Checks that the README.md file is generated with correct project information."}], "calls": ["Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "PostgreSQLTemplate"], "search-terms": ["test_postgresql_template", "PostgreSQL", "universalinit", "template", "test", "pytest"], "state": 2, "file_id": 18, "knowledge_revision": 388, "git_revision": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78", "ctags": [], "filename": "test/test_postgresql_template.py", "hash": "ed3eb2f98c649c67bd48e8ffe2423228", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"388": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78"}]}