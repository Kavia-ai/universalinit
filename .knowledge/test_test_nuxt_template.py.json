{"is_source_file": true, "format": "Python", "description": "This is a Python test source file that contains fixtures, unit tests, and setup code for testing the Nuxt project template initialization, configuration loading, and file content replacement within a software project.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "yaml.safe_load", "json.dump", "json.load"], "published": ["test_nuxt_init_info", "test_project_initialization", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement"], "classes": [{"name": "ProjectConfig", "description": "Configuration data class for project settings."}, {"name": "ProjectType", "description": "Enumeration of supported project types, e.g., NUXT."}, {"name": "TemplateInitInfo", "description": "Contains initial setup information for project templates."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates and configurations."}, {"name": "TemplateProvider", "description": "Provides template files and resources for project generation."}, {"name": "NuxtTemplate", "description": "Template class specifically for Nuxt.js project scaffolding."}], "methods": [{"name": "get_init_info", "description": "Retrieves initial setup information for a template."}, {"name": "initialize_project", "description": "Executes the project initialization process; applies templates, runs scripts, copies files."}, {"name": "wait_for_post_process_completed", "description": "Waits for the post-processing script to complete execution."}, {"name": "load_config", "description": "Loads project configuration from a JSON or YAML file."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_nuxt_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["pytest.fixture", "Path()", "shutil.rmtree()", "tempfile.mkdtemp()", "yaml.dump()", "yaml.safe_load()", "json.dump()", "json.load()", "template.get_init_info()", "initializer.initialize_project()", "initializer.wait_for_post_process_completed()", "ProjectInitializer.load_config()"], "search-terms": ["NuxtTemplate", "project initialization tests", "pytest fixtures", "project configuration", "template variable replacement", "post-processing script", "test_nuxt_template.py"], "state": 2, "file_id": 358, "knowledge_revision": 1036, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_nuxt_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def test_nuxt_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_nuxt_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "38624e0d6ae5fadc91cab0aaccb9924e", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_nuxt_template.py", "revision_history": [{"1036": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}