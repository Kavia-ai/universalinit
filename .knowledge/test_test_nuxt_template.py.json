{"is_source_file": true, "format": "Python", "description": "Test suite for the NuxtTemplate class and project initialization process, including fixture setup, template rendering, and post-processing verification.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path.mkdtemp", "shutil.rmtree", "Path.mkdir", "yaml.dump", "Path.write_text", "Path.read_text", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "NuxtTemplate", "ProjectInitializer.load_config"], "published": ["test_nuxt_init_info", "test_project_initialization", "test_post_processing_execution", "test_config_file_loading", "test_template_variable_replacement"], "classes": [{"name": "ProjectConfig", "description": "Configuration data class for project settings."}, {"name": "ProjectType", "description": "Enumeration for different project types, e.g., NUXT."}, {"name": "TemplateInitInfo", "description": "Contains initialization commands and settings for templates."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates."}, {"name": "TemplateProvider", "description": "Provides template instances based on project type."}, {"name": "NuxtTemplate", "description": "Template class for Nuxt.js projects."}], "methods": [{"name": "test_nuxt_init_info", "description": "Tests retrieval of initial template information for Nuxt projects."}, {"name": "test_project_initialization", "description": "Verifies that project files are correctly generated and content is replaced."}, {"name": "test_post_processing_execution", "description": "Checks that post-processing scripts are executed successfully."}, {"name": "test_config_file_loading", "description": "Tests loading project configuration from a JSON file."}, {"name": "test_template_variable_replacement", "description": "Ensures template variables are correctly replaced in output files."}], "calls": ["Path.mkdtemp", "shutil.rmtree", "Path.mkdir", "yaml.dump", "Path.write_text", "Path.read_text", "ProjectInitializer.load_config", "initializer.template_factory.create_template", "template.get_init_info", "initializer.initialize_project", "initializer.wait_for_post_process_completed"], "search-terms": ["NuxtTemplate", "test_nuxt_init_info", "project_initialization", "post_processing", "config.yml", "template variable", "test.txt", "Nuxt project setup"], "state": 2, "file_id": 1, "knowledge_revision": 338, "git_revision": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78", "ctags": [], "filename": "test/test_nuxt_template.py", "hash": "38624e0d6ae5fadc91cab0aaccb9924e", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"338": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78"}]}