{"is_source_file": true, "format": "Python", "description": "Test file for MongoDB template functionality, including tests for template initialization, parameter replacement, configuration loading, and project setup.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "pytest", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "yaml.safe_load", "json.dump", "json.load"], "published": ["test_mongodb_init_info", "test_project_initialization", "test_default_parameters", "test_mongodb_without_auth", "test_config_file_loading", "test_entry_point_url", "test_docker_compose_yaml_structure", "test_template_variable_replacement", "test_post_processing_execution"], "classes": [], "methods": [{"name": "test_mongodb_init_info(template_dir, project_config)", "description": "Verifies that template initialization info is correctly retrieved and contains expected command for environment setup.", "scope": "", "scopeKind": ""}, {"name": "test_project_initialization(template_dir, project_config)", "description": "Tests the project initialization process including output directory structure, content, and replacements.", "scope": "", "scopeKind": ""}, {"name": "test_default_parameters(template_dir, temp_dir)", "description": "Checks that default parameters are correctly applied when none are provided.", "scope": "", "scopeKind": ""}, {"name": "test_mongodb_without_auth(template_dir, project_config)", "description": "Ensures MongoDB setup works without authentication by default, checks for presence of user and password placeholders.", "scope": "", "scopeKind": ""}, {"name": "test_config_file_loading(temp_dir)", "description": "Tests the ability to load project configuration from a JSON file.", "scope": "", "scopeKind": ""}, {"name": "test_entry_point_url(template_dir, project_config)", "description": "Validates that the generated entry point URL contains the correct database name and port.", "scope": "", "scopeKind": ""}, {"name": "test_docker_compose_yaml_structure(template_dir, project_config)", "description": "Checks that the generated docker-compose YAML file has the correct structure and keys.", "scope": "", "scopeKind": ""}, {"name": "test_template_variable_replacement(template_dir, project_config)", "description": "Verifies that template variables in files are replaced with actual project parameters.", "scope": "", "scopeKind": ""}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "description": "Tests execution of post-processing scripts and verifies expected side effects like marker files.", "scope": "", "scopeKind": ""}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["universalinit.templateconfig.ProjectConfig", "universalinit.templateconfig.ProjectType", "universalinit.templateconfig.TemplateInitInfo", "universalinit.universalinit.ProjectInitializer", "universalinit.universalinit.TemplateProvider", "universalinit.universalinit.MongoDBTemplate", "yaml.dump", "yaml.safe_load", "json.dump", "Path.exists", "Path.read_text", "Path.write_text", "shutil.rmtree", "tempfile.mkdtemp", "time.sleep"], "search-terms": ["MongoDBTemplate", "test_mongodb_init_info", "docker-compose.yml", "config.yml", "entry_point_url", "post_processing"], "state": 2, "file_id": 658, "knowledge_revision": 1340, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_default_parameters", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_default_parameters(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_docker_compose_yaml_structure", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_docker_compose_yaml_structure(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_entry_point_url", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_entry_point_url(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_mongodb_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_mongodb_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_mongodb_without_auth", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_mongodb_without_auth(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "4cb7ae731530b63bdcf960036b999184", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_mongodb_template.py", "revision_history": [{"1340": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}