{"is_source_file": true, "format": "Python", "description": "Test file for MongoDB template functionality, including fixture setup, project initialization, parameter handling, and content verification.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "pytest"], "published": [], "classes": [{"name": "ProjectConfig", "description": "Configuration class for the project, including parameters like name, version, description, author, project type, output path, and custom parameters."}, {"name": "ProjectType", "description": "Enum or similar construct defining supported project types, e.g., MongoDB."}, {"name": "TemplateInitInfo", "description": "Data structure containing initialization information such as environment commands, entry point URL, and other template-specific info."}, {"name": "ProjectInitializer", "description": "Main class for initializing projects based on templates and configuration."}, {"name": "TemplateProvider", "description": "Provides template files and resources based on a directory."}, {"name": "MongoDBTemplate", "description": "Template class for MongoDB projects, generating necessary configuration files and handling parameter substitution."}], "methods": [{"name": "get_init_info", "description": "Returns the initialization info for the MongoDB template, including environment commands, the entry point URL, and build instructions."}, {"name": "initialize_project", "description": "Performs project setup and outputs necessary files to the specified output directory."}, {"name": "get_replaceable_parameters", "description": "Returns a dictionary of parameters that can be replaced in templates, such as project name, author, database name, and port."}, {"name": "wait_for_post_process_completed", "description": "Waits for post-processing scripts or actions to complete, with a specified timeout."}, {"name": "project_config(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "temp_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "template_dir(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_config_file_loading(temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_default_parameters(template_dir, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_docker_compose_yaml_structure(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_entry_point_url(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_mongodb_init_info(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_mongodb_without_auth(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_post_processing_execution(template_dir, project_config, temp_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_project_initialization(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_template_variable_replacement(template_dir, project_config)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["yaml.dump", "yaml.safe_load", "shutil.rmtree", "Path.mkdir", "Path.write_text", "Path.read_text", "Path.exists", "Path.touch"], "search-terms": ["MongoDBTemplate", "universalinit", "test_mongodb_template", "config.yml", "docker-compose.yml", "TemplateInitInfo", "initialize_project", "get_init_info", "project_config", "ProjectType"], "state": 2, "file_id": 346, "knowledge_revision": 1024, "git_revision": "1aee8ed1eca8330cc765b711c43546e90b04ff39", "ctags": [{"_type": "tag", "name": "project_config", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def project_config(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "temp_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def temp_dir():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "template_dir", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def template_dir(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_config_file_loading", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_config_file_loading(temp_dir):$/", "language": "Python", "kind": "function", "signature": "(temp_dir)"}, {"_type": "tag", "name": "test_default_parameters", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_default_parameters(template_dir, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, temp_dir)"}, {"_type": "tag", "name": "test_docker_compose_yaml_structure", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_docker_compose_yaml_structure(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_entry_point_url", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_entry_point_url(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_mongodb_init_info", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_mongodb_init_info(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_mongodb_without_auth", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_mongodb_without_auth(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_post_processing_execution", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_post_processing_execution(template_dir, project_config, temp_dir):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config, temp_dir)"}, {"_type": "tag", "name": "test_project_initialization", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_project_initialization(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}, {"_type": "tag", "name": "test_template_variable_replacement", "path": "/home/kavia/workspace/code-generation/universalinit/test/test_mongodb_template.py", "pattern": "/^def test_template_variable_replacement(template_dir, project_config):$/", "language": "Python", "kind": "function", "signature": "(template_dir, project_config)"}], "hash": "4cb7ae731530b63bdcf960036b999184", "format-version": 4, "code-base-name": "universalinit", "filename": "test/test_mongodb_template.py", "revision_history": [{"1024": "1aee8ed1eca8330cc765b711c43546e90b04ff39"}]}