{"is_source_file": true, "format": "Python", "description": "Test suite for MongoDB template functionality in the universalinit project, including fixtures, initialization, and content verification.", "external_files": ["pytest", "pathlib", "shutil", "tempfile", "yaml", "json", "universalinit.templateconfig", "universalinit.universalinit"], "external_methods": ["pytest.fixture", "Path", "shutil.rmtree", "tempfile.mkdtemp", "yaml.dump", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "MongoDBTemplate"], "published": ["test_mongodb_init_info", "test_project_initialization", "test_default_parameters", "test_mongodb_without_auth", "test_config_file_loading", "test_entry_point_url", "test_docker_compose_yaml_structure", "test_template_variable_replacement", "test_post_processing_execution"], "classes": [{"name": "ProjectConfig", "description": "Configuration class for project parameters."}, {"name": "ProjectType", "description": "Enumeration of project types, including MongoDB."}, {"name": "TemplateInitInfo", "description": "Contains initialization information for templates."}, {"name": "ProjectInitializer", "description": "Main class responsible for initializing projects based on templates."}, {"name": "TemplateProvider", "description": "Provides template files for project templates."}, {"name": "MongoDBTemplate", "description": "Template class for MongoDB projects."}], "methods": [{"name": "load_config", "description": "Loads project configuration from a JSON or YAML file."}, {"name": "get_init_info", "description": "Retrieves initialization info for the template."}, {"name": "initialize_project", "description": "Performs project setup based on configuration and template."}, {"name": "wait_for_post_process_completed", "description": "Waits for post-processing scripts to complete."}], "calls": ["yaml.dump", "shutil.rmtree", "Path", "json.dump", "ProjectConfig", "ProjectType", "TemplateInitInfo", "ProjectInitializer", "TemplateProvider", "MongoDBTemplate"], "search-terms": ["test_mongodb_template", "MongoDB", "universalinit", "test_mongodb", "template", "test", "pytest fixtures", "docker compose", "config.yml", "README.md"], "state": 2, "file_id": 28, "knowledge_revision": 399, "git_revision": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78", "ctags": [], "filename": "test/test_mongodb_template.py", "hash": "4cb7ae731530b63bdcf960036b999184", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/universalinit.git:main", "revision_history": [{"399": "6b04441f0318e5bbf07f918b5dc27b0ce2d79d78"}]}